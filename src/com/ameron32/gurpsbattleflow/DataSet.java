
package com.ameron32.gurpsbattleflow;

import com.ameron32.gurpsbattleflow.damage.Roll;

public class DataSet {

    public static final short COLUMN_STRENGTH = 0;
    public static final short COLUMN_THRUST_DIE = 1;
    public static final short COLUMN_THRUST_MODIFIER = 2;
    public static final short COLUMN_SWING_DIE = 3;
    public static final short COLUMN_SWING_MODIFIER = 4;
    public static final short[][] table_thrust_and_swing =
    {
            {
                    1, 1, -6, 1, -5
            },
            {
                    2, 1, -6, 1, -5
            },
            {
                    3, 1, -5, 1, -4
            },
            {
                    4, 1, -5, 1, -4
            },
            {
                    5, 1, -4, 1, -3
            },
            {
                    6, 1, -4, 1, -3
            },
            {
                    7, 1, -3, 1, -2
            },
            {
                    8, 1, -3, 1, -2
            },
            {
                    9, 1, -2, 1, -1
            },
            {
                    10, 1, -2, 1, 0
            },
            {
                    11, 1, -1, 1, 1
            },
            {
                    12, 1, -1, 1, 2
            },
            {
                    13, 1, 0, 2, -1
            },
            {
                    14, 1, 0, 2, 0
            },
            {
                    15, 1, 1, 2, 1
            },
            {
                    16, 1, 1, 2, 2
            },
            {
                    17, 1, 2, 3, -1
            },
            {
                    18, 1, 2, 3, 0
            },
            {
                    19, 2, -1, 3, 1
            },
            {
                    20, 2, -1, 3, 2
            },
            {
                    21, 2, 0, 4, -1
            },
            {
                    22, 2, 0, 4, 0
            },
            {
                    23, 2, 1, 4, 1
            },
            {
                    24, 2, 1, 4, 2
            },
            {
                    25, 2, 2, 5, -1
            },
            {
                    26, 2, 2, 5, 0
            },
            {
                    27, 3, -1, 5, 1
            },
            {
                    28, 3, -1, 5, 1
            },
            {
                    29, 3, 0, 5, 2
            },
            {
                    30, 3, 0, 5, 2
            },
            {
                    35, 4, -1, 6, 1
            },
            {
                    45, 5, 0, 7, 1
            },
            {
                    50, 5, 2, 8, -1
            },
            {
                    55, 6, 0, 8, 1
            },
            {
                    60, 7, 1, 9, 0
            },
            {
                    65, 7, 1, 9, 2
            },
            {
                    70, 8, 0, 10, 0
            },
            {
                    75, 8, 2, 10, 2
            },
            {
                    80, 9, 0, 11, 0
            },
            {
                    85, 9, 2, 11, 2
            },
            {
                    90, 10, 0, 12, 0
            },
            {
                    95, 10, 2, 12, 2
            },
            {
                    100, 11, 0, 13, 0
            },
            {
                    110, 12, 0, 14, 0
            },
            {
                    120, 13, 0, 15, 0
            },
            {
                    130, 14, 0, 16, 0
            },
            {
                    140, 15, 0, 17, 0
            },
            {
                    150, 16, 0, 18, 0
            },
            {
                    160, 17, 0, 19, 0
            },
            {
                    170, 18, 0, 20, 0
            },
            {
                    180, 19, 0, 21, 0
            },
            {
                    190, 20, 0, 22, 0
            },
            {
                    200, 21, 0, 23, 0
            },
            {
                    210, 22, 0, 24, 0
            },
            {
                    220, 23, 0, 25, 0
            },
            {
                    230, 24, 0, 26, 0
            },
            {
                    240, 25, 0, 27, 0
            },
            {
                    250, 26, 0, 28, 0
            },
            {
                    260, 27, 0, 29, 0
            },
            {
                    270, 28, 0, 30, 0
            },
            {
                    280, 29, 0, 31, 0
            },
            {
                    290, 30, 0, 32, 0
            },
            {
                    300, 31, 0, 33, 0
            },
            {
                    310, 32, 0, 34, 0
            },
            {
                    320, 33, 0, 35, 0
            },
            {
                    330, 34, 0, 36, 0
            },
            {
                    340, 35, 0, 37, 0
            },
            {
                    350, 36, 0, 38, 0
            },
            {
                    360, 37, 0, 39, 0
            },
            {
                    370, 38, 0, 40, 0
            },
            {
                    380, 39, 0, 41, 0
            },
            {
                    390, 40, 0, 42, 0
            },
            {
                    400, 41, 0, 43, 0
            },
            {
                    410, 42, 0, 44, 0
            },
            {
                    420, 43, 0, 45, 0
            },
            {
                    430, 44, 0, 46, 0
            },
            {
                    440, 45, 0, 47, 0
            },
            {
                    450, 46, 0, 48, 0
            },
            {
                    460, 47, 0, 49, 0
            },
            {
                    470, 48, 0, 50, 0
            },
            {
                    480, 49, 0, 51, 0
            },
            {
                    490, 50, 0, 52, 0
            },
            {
                    500, 51, 0, 53, 0
            },
            {
                    510, 52, 0, 54, 0
            },
            {
                    520, 53, 0, 55, 0
            },
            {
                    530, 54, 0, 56, 0
            },
            {
                    540, 55, 0, 57, 0
            },
            {
                    550, 56, 0, 58, 0
            },
            {
                    560, 57, 0, 59, 0
            },
            {
                    570, 58, 0, 60, 0
            },
            {
                    580, 59, 0, 61, 0
            },
            {
                    590, 60, 0, 62, 0
            },
            {
                    600, 61, 0, 63, 0
            },
            {
                    610, 62, 0, 64, 0
            },
            {
                    620, 63, 0, 65, 0
            },
            {
                    630, 64, 0, 66, 0
            },
            {
                    640, 65, 0, 67, 0
            },
            {
                    650, 66, 0, 68, 0
            },
            {
                    660, 67, 0, 69, 0
            },
            {
                    670, 68, 0, 70, 0
            },
            {
                    680, 69, 0, 71, 0
            },
            {
                    690, 70, 0, 72, 0
            },
            {
                    700, 71, 0, 73, 0
            },
            {
                    710, 72, 0, 74, 0
            },
            {
                    720, 73, 0, 75, 0
            },
            {
                    730, 74, 0, 76, 0
            },
            {
                    740, 75, 0, 77, 0
            },
            {
                    750, 76, 0, 78, 0
            },
            {
                    760, 77, 0, 79, 0
            },
            {
                    770, 78, 0, 80, 0
            },
            {
                    780, 79, 0, 81, 0
            },
            {
                    790, 80, 0, 82, 0
            },
            {
                    800, 81, 0, 83, 0
            },
            {
                    810, 82, 0, 84, 0
            },
            {
                    820, 83, 0, 85, 0
            },
            {
                    830, 84, 0, 86, 0
            },
            {
                    840, 85, 0, 87, 0
            },
            {
                    850, 86, 0, 88, 0
            },
            {
                    860, 87, 0, 89, 0
            },
            {
                    870, 88, 0, 90, 0
            },
            {
                    880, 89, 0, 91, 0
            },
            {
                    890, 90, 0, 92, 0
            },
            {
                    900, 91, 0, 93, 0
            },
            {
                    910, 92, 0, 94, 0
            },
            {
                    920, 93, 0, 95, 0
            },
            {
                    930, 94, 0, 96, 0
            },
            {
                    940, 95, 0, 97, 0
            },
            {
                    950, 96, 0, 98, 0
            },
            {
                    960, 97, 0, 99, 0
            },
            {
                    970, 98, 0, 100, 0
            },
            {
                    980, 99, 0, 101, 0
            },
            {
                    990, 100, 0, 102, 0
            },
            {
                    1000, 101, 0, 103, 0
            },
            {
                    1010, 102, 0, 104, 0
            },
            {
                    1020, 103, 0, 105, 0
            },
            {
                    1030, 104, 0, 106, 0
            },
            {
                    1040, 105, 0, 107, 0
            },
            {
                    1050, 106, 0, 108, 0
            },
            {
                    1060, 107, 0, 109, 0
            },
            {
                    1070, 108, 0, 110, 0
            },
            {
                    1080, 109, 0, 111, 0
            },
            {
                    1090, 110, 0, 112, 0
            },
            {
                    1100, 111, 0, 113, 0
            },
            {
                    1110, 112, 0, 114, 0
            },
            {
                    1120, 113, 0, 115, 0
            },
            {
                    1130, 114, 0, 116, 0
            },
            {
                    1140, 115, 0, 117, 0
            },
            {
                    1150, 116, 0, 118, 0
            },
            {
                    1160, 117, 0, 119, 0
            },
    };

    public static Roll getThrustFromST(int st) {
        for (int i = 0; i < table_thrust_and_swing.length; i++) {
            if (table_thrust_and_swing[i][COLUMN_STRENGTH] > st)
                return new Roll(
                        table_thrust_and_swing[(i >= 1) ? i - 1 : 0][COLUMN_THRUST_DIE],
                        table_thrust_and_swing[(i >= 1) ? i - 1 : 0][COLUMN_THRUST_MODIFIER]);
        }
        return null;
    }
    
    public static Roll getSwingFromST(int st) {
        for (int i = 0; i < table_thrust_and_swing.length; i++) {
            if (table_thrust_and_swing[i][COLUMN_STRENGTH] > st) {
                // to prevent -1, uses row 0 on excessively low ST
                return new Roll(
                        table_thrust_and_swing[(i >= 1) ? i - 1 : 0][COLUMN_SWING_DIE],
                        table_thrust_and_swing[(i >= 1) ? i - 1 : 0][COLUMN_SWING_MODIFIER]);
            }
        }
        return null;
    }
}
